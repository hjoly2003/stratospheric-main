plugins {
  id 'org.springframework.boot' version '3.1.1'
  id 'io.spring.dependency-management' version '1.1.0'
  id 'java'
}

group = 'dev.stratospheric'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
  mavenCentral()
}

ext {
  set('awsSpringVersion', '3.0.1')
  set('testcontainersVersion', '1.18.1')
  set('thymeleafExtrasSpringSecurityVersion', '3.1.1.RELEASE')
  set('jsr305Version', '3.0.2')
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-web'

  // [!]
  implementation 'org.springframework.boot:spring-boot-starter-mail'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

  // [!]
  implementation 'io.awspring.cloud:spring-cloud-aws-starter-ses'

  // [N]:sqs
  implementation 'io.awspring.cloud:spring-cloud-aws-starter-sqs'
  
  implementation "org.thymeleaf.extras:thymeleaf-extras-springsecurity6:${thymeleafExtrasSpringSecurityVersion}"
  implementation 'software.amazon.awssdk:cognitoidentityprovider'
  implementation "com.google.code.findbugs:jsr305:${jsr305Version}"
  implementation 'org.webjars:webjars-locator-core'
  implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
  implementation 'org.webjars:bootstrap:5.3.0'
  implementation 'org.webjars:font-awesome:6.4.0'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  runtimeOnly 'org.postgresql:postgresql'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.testcontainers:localstack'
  testImplementation 'org.testcontainers:junit-jupiter'

  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

dependencyManagement {
  imports {
    mavenBom "io.awspring.cloud:spring-cloud-aws-dependencies:${awsSpringVersion}"
    mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
  }
}

test {
  useJUnitPlatform()
}

bootRun {
  jvmArgs = [
    "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005",
    "-Dspring.profiles.active=dev",
  ]
}

jar {
  enabled = false
}
